
Tratando-se de regra de negócio, utiliza-se o modelo mvc

faz separação entre model e view

controller altera o dado que é o model e a view se atualiza para mostrar o estado mais atual desse model,
ou seja, as regras de negócio não ficam espalhadas na view, 
ficam no model, pra onde vai o model, as regras de negócio vao junto.

orientação voltada a objeto possui classes e os nomes de classes começam com letra maiúscula
 (na maioria das vezes o nome do arquivo é o mesmo da classe para manter organizado, mas não é regra).

instancia da classe> dois objetos criados a partir da classe criada
Toda classe que tem construtor só é chamada se usar o operador new.NomeDaClasse.

Para definirmos atributos de instância de uma classe, precisamos adicionar em sua definição um constructor.
É através do construtor que adicionamos na variável implícita this as propriedades que desejamos que toda instância da classe tenha.
ex.>> class Pessoa {

    constructor() {

        this.nome = '';
        this.idade = 0;
    }
}

no mundo do JS, um método é uma espécie de função

se eu crio uma função dentro de uma classe, eu vou chamar de método

se eu crio uma função fora de uma classe, eu chamo de função mesmo.

quando a propriedade é um getter, ela é apenas de leitura.

quem tem método é objeto. (método>> x.algumaCoisa).

adoção de novo hábito: substituir nas declarações de váriáveis o uso de var por let,
que permite um escopo de bloco e evita que as mesmas vazem para um escopo global.
Antes do ES6, em JS, era comum o uso de funções para a criação de um escopo para a variável.

programação precedual: o dado e o comportamento estão separados.

na programação orientada a objetos, temos uma forte conexão entre dado e comportamento;
onde o dado vai, os comportamentos que operam aqueles dados vão juntos.

o <document.querySelector() é o responsável por buscar no DOM os elementos com id '#exemplo'>

método e função são parecidos, a diferença é que chamamos de método aquilo que pertence a um objeto,
 e função é a que não pertende a nada, é a que vive sozinha. 
 Quando um método é jogado para uma variável ele passa a ser uma função, pois não pertence a um objeto.

 Uma das coisas que deve ser evitada em JS é percorrer o DOM, para isso, 
 usaremos o constructor para mover os inputs para dentro dele, mas em vez de criar  uma variável, será criado
 atributos de instância como o this.
 
 Por que funcionar passar um array pra date? Porque qdo geramos os array com ano, mes e dia,
 ele transforma cada item em uma string e adiciona separado.

Existe várias formas de criar datas, uma delas é passar o mês de 0 a 11 (0 janeiro, 11 dezembro)

...(reticências significa 'spread operator', ele entende que o item do array precisa ser desmembrado)

% (esse símbolo significa 'módulo' ) [posições em array> 0 é posição 1, 1 é posição 2 e assim sucessivamente]
criar novos numeros junto desses, dobrando o valor dos ímpares
 let numeros = [3,2,11,20,8,7];
let novosNumeros = numeros.map((item)=> (item%2 +1 ) * item);
console.log(novosNumeros);

Template string: exemplo: return `${data.getDate()}/${data.getMonth() + 1}/${data.getFullYear()}`; (backtick(sinal da crase))

expressão regular: exemplo /\d{4}-\d{2}-\d{2}/     >>>serve para testar se a data retorna certa ou quando quer retornar erro caso a data não seja assim.
A expressão regular é utilizada para encontrar padrões. (se o /\D (se o d for maiusculo, dai ele quer considerar qualquer coisa diferente de número))

Os métodos determinam o comportamento dos objetos de uma classe